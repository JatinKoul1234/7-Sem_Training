# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:
        self.prev=None
        self.diff=None
        def inorder(node):
            if not node:
                return None
            inorder(node.left)
            if self.prev is not None:
                curr_diff=node.val-self.prev
                if self.diff is None or curr_diff<self.diff:
                    self.diff = curr_diff
            self.prev=node.val
            inorder(node.right)
        inorder(root)
        return self.diff
